La instrucciones se trata de migrar las APIs existentes de las anteriores practicas de ASP.NET 8 a ASP.NET 9.

Debajo link del v√≠deo explicando como migrar a ASP.NET 9.

**Este tutorial ense√±a c√≥mo crear una API REST usando .NET 9, Swagger y SQL Server, con enfoque en actualizaci√≥n tecnol√≥gica.**

Aqu√≠ tienes un resumen detallado de los pasos que se siguen en el video de Jap Software:

---

### üõ†Ô∏è Herramientas utilizadas
- **.NET 9** (versi√≥n actualizada del framework)
- **Visual Studio 2022 o superior**
- **SQL Server** (para base de datos)
- **Swagger** (para documentaci√≥n y pruebas de la API)
- **Postman** (opcional, para pruebas adicionales)

---

### üìã Pasos del tutorial

1. **Configuraci√≥n del proyecto**
   - Crear un nuevo proyecto en Visual Studio usando la plantilla *ASP.NET Core Web API*.
   - Seleccionar .NET 9 como versi√≥n del framework.
   - Configurar el nombre del proyecto y la soluci√≥n.

2. **Instalaci√≥n de paquetes necesarios**
   - Usar NuGet para instalar:
     - `Swashbuckle.AspNetCore` (para Swagger)
     - `Microsoft.EntityFrameworkCore.SqlServer` (para conectarse a SQL Server)
     - `Microsoft.EntityFrameworkCore.Tools` (para migraciones)

3. **Configuraci√≥n de la base de datos**
   - Crear una clase de contexto (`DbContext`) que represente la conexi√≥n a SQL Server.
   - Definir las entidades (modelos) que se usar√°n en la API.
   - Configurar la cadena de conexi√≥n en `appsettings.json`.

4. **Creaci√≥n de controladores**
   - Crear controladores REST para manejar operaciones CRUD (Create, Read, Update, Delete).
   - Usar atributos como `[HttpGet]`, `[HttpPost]`, `[HttpPut]`, `[HttpDelete]`.

5. **Documentaci√≥n con Swagger**
   - Activar Swagger en `Program.cs` para generar documentaci√≥n autom√°tica.
   - Probar los endpoints directamente desde la interfaz Swagger.

6. **Migraciones y base de datos**
   - Ejecutar comandos en la consola de NuGet:
     - `Add-Migration InitialCreate`
     - `Update-Database`
   - Verificar que la base de datos se haya creado correctamente en SQL Server.

7. **Pruebas de la API**
   - Usar Swagger para enviar peticiones y verificar respuestas.
   - Opcional: usar Postman para pruebas m√°s avanzadas.

